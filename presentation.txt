Developing for
Accessibility

Who am I?

Aaron Krauss

I like:
* tea
* cocktails
* longboarding

I have a beautiful wife
and a beautiful son

Professional developer
in Oklahoma City
since 2011

Technical Lead of
New Development

@images/clevyr.png

@images/techlahoma.png

Involved since before
Techlahoma existed

Active speaker
since 2014

Former Techlahoma
Board Member
(2018 - 2019)

User group leader
of 3 groups

* OKC Ruby (2018 - 2020)
* OKC WebDevs (since 2020)
* OKC Coffee and Code (since 2022)

@images/okc-webdevs.png

@images/okc-coffee-and-code.png

So what are we
going to talk about?

Developing for Accessibility

What is Accessibility?

a11y

Accessibility is giving a frick about people

All people

That includes users with disabilities

And also users with no disabilities at all

Main Concept

Building an accessible web site
makes your website better overall

* Better design architecture
* Better code architecture
* More quality content
* Better SEO
* More usage (and thus popularity)

And all of that usually means more $$$

@images/make-money.png

Developing an accessibile site
may also be required

Section 508

Some housekeeping...

Don't say "disabled users"

Say "users with disabilities"

Myth Busing Time

Myth #1

Accessibility = handling blind users

Wrong

Accessibility = handling everyone

Myth #2

Accessibility = people use screen readers,
so add image alt text

Wrong

Accessibility = a ton of stuff

But it's okay...

@images/we-can-do-this.png

Types of Disabilities

* Visual
* Motor
* Auditory
* Cognitive

Followed by a bonus disability

Visual Concerns

* Low-or-no Vision
* Color-blindness
* Contrast
* Z-Pattern
* Open Graph

Low-or-no Vision

People will use screen readers

Windows - JAWS
MacOS - Voice Over (built-in)

Accessibility tree

@images/accessibility-tree.png

Accessibility tree vs DOM tree

Tips for maximizing screen reader usage:

* Use Semantic HTML
  * Such as <section>,<article>,
    <aside>,<nav>, etc.

* Image alt tags

* Using links & buttons right

* ARIA roles and attributes - as needed

Accessible Rich
Internet Applications

Color-blindness

axe Chrome Plugin

Contrast

@images/contrast.png

Z-Pattern

Users donâ€™t read web pages,
they scan.

@images/z-scan.png

Open Graph

Auditory Concerns

For Media:

* Subtitles
* Volume controls
* Ideally default to a "muted" state

For supplemental audio:

* Visual cues
* Nothing absurd (i.e. loud, lengthy, confusing)

Motor Concerns

* Responsive Applications
* Skip menus
* Tab flow
* Focus indicators
* "Submit" actions
* "Cancel" actions

Responsive Applications

@images/responsive.png

Skip menus

Tab flow

Focus indicators

"Submit" actions

e.g. the Enter or Spacebar key

@images/modal.png

"Cancel" actions

e.g. the ESC key

@images/modal.png

DEMO

Cognitive Concerns

* Good content
* Well-thought-out workflows
* "Panic" mode

Good Content

* Labels
* Titles / Headings
* Call to Actions

Well thought-out workflows

* Analyze multiple users' perspectives
* Build wireframes (and give them to the dev)

"Panic" mode

Think websites like:
* Hospitals
* Schools
* Local News / Weather

Make a few things incredibly simple

Bonus Disability

Drum Roll...

"Data" Disability

Not all users have a ton of data,
let alone fast connections

Especially in other countries

So what can you do?

* Optimize your images

@images/super-mario.png

* 150-200 KB is usually my limit.
Ideally less than that.

* Minify & Tree-shake your CSS and JS

* Don't overdo it on custom fonts

* Set caching HTTP headers

Want to learn more?

1) Watch this talk like 2 more
times when it gets up on YouTube

2) Then follow the references

3) Then google things

* References
https://alkrauss48.github.io/developing-for-accessibility-talk/

* Entire Presentation:
https://github.com/alkrauss48/developing-for-accessibility-talk

How to Get Involved
Beyond Thunderplains

Go to these links:
* meetup.com/pro/techlahoma
* slack.techlahoma.org

Thanks!

Aaron Krauss
thecodeboss.dev
@thecodeboss
